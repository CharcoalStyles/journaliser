import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { Header } from "../src/components/Header";
import { NoteList } from "../src/components/NoteList";
import styles from "../styles/Home.module.scss";
import defaultStyles from "../styles/default.module.scss";
import { PrismaClient } from "@prisma/client";
import { DisplayNote, noteToDisplayNote } from "../src/db/access";
import { format, set } from "date-fns";

type HomeProps = {
  notes: Array<DisplayNote>;
};

const Home: NextPage<HomeProps> = ({ notes }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Journaliser</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Header />
        <div className={styles.content}>
          <h2 className={defaultStyles.title}>Daily Log</h2>
          <p className={styles.date}>{format(new Date(), "eee do LLL yyyy")}</p>
          <NoteList notes={notes} />
        </div>
      </main>
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps<HomeProps> = async () => {
  const prisma = new PrismaClient();
  const current = new Date();

  const notes = await prisma.note.findMany({
    where: {
      AND: [
        {
          createdAt: {
            gt: set(current, {
              hours: 0,
              minutes: 0,
              seconds: 0,
              milliseconds: 0,
            }),
          },
        },
        { createdAt: { lt: set(current, {
          hours: 23,
          minutes: 59,
          seconds: 59,
          milliseconds: 999,
        }) } },
      ],
    },
    orderBy: { createdAt: "asc" },
  });

  return {
    props: {
      notes: notes.map((note) => noteToDisplayNote(note)),
    }, // will be passed to the page component as props
  };
};
